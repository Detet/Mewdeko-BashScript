#!/bin/bash
#
# Install all of the packages and dependencies required for Mewdeko to run on Linux
# distributions.
#
########################################################################################
#### [ Functions ]


install_prereqs() {
    ####
    # Function Info: Install required packages and dependencies needed by Mewdeko, on
	#                all compatible Linux distributions, besides Debian 9.
	#
    # Arguments:
    # 	$1 - required
    #       Distribution name.
    # 	$2 - required
    #       Distribution version.
    #   $3 - required
    #       OpenJDK version.
    #   $4 - optional
    #       True if dotnet preferences must be set.
    ####

    echo "Installing .NET Core..."
    ## Microsoft package signing key.
    curl -O https://packages.microsoft.com/config/"$1"/"$2"/packages-microsoft-prod.deb
    sudo dpkg -i packages-microsoft-prod.deb
    sudo rm -f packages-microsoft-prod.deb

    ### TODO: Provide better comments to explain this section
    if [[ $4 = true ]]; then
        if hash dotnet &>/dev/null && [[ ! $(dotnet --version &>/dev/null) ]]; then
            echo "${_YELLOW}While the .NET runtime is installed, the .NET SDK is not${_NC}"
            echo "Uninstalling existing .NET Core 6.0 installation..."
            sudo apt remove dotnet-sdk-6.0 -y
            sudo apt autoremove -y

            if [[ ! -f /etc/apt/preferences.d/custom-dotnet.pref ]]; then
                echo "Upating prefered .NET Core install method..."

                {
                    echo -e "Explanation: https://github.com/dotnet/core/issues/7699" \
                        "\nPackage: *" \
                        "\nPin: origin \"packages.microsoft.com\"" \
                        "\nPin-Priority: 1001" | sudo tee /etc/apt/preferences.d/custom-dotnet.pref
                } || {
                    echo "${_RED}Failed to create" \
                        "'/etc/apt/preferences.d/custom-dotnet.pref'${_NC}" >&2
                    exit 1
                }

                echo "Reinstalling .NET Core..."
            fi
        fi
    fi

    ## Install the SDK.
    sudo apt-get update \
        && sudo apt-get install -y dotnet-sdk-6.0

    ## Install Java.
    echo "Installing '$3'..."
    sudo apt-get install -y "$3"

    ## Other prerequisites.
    echo "Installing other prerequisites..."
    sudo apt-get install redis-server git ccze apt-transport-https -y
}

unsupported() {
    ####
    # Function Info: Informs the end-user that their system is not supported by the
	#				 automatic installation of the prerequisites.
    ####

    echo "${_RED}The installer does not support the automatic installation and setup" \
        "of Mewdeko's prerequisites for your OS: $_DISTRO $_VER ${_ARCH}${_NC}"
    read -rp "Press [Enter] to return to the installer menu"
    exit 3
}


#### End of [ Functions ]
########################################################################################
#### [ Main ]


read -rp "We will now install Mewdeko's prerequisites. Press [Enter] to continue."

if [[ $_DISTRO = "ubuntu" ]]; then
    case "$_VER" in
        22.04)       install_prereqs "ubuntu" "$_VER" "openjdk-17-jdk" "true" ;;
        18.04|20.04) install_prereqs "ubuntu" "$_VER" "openjdk-17-jdk" ;;
        *)           unsupported ;;
    esac
elif [[ $_DISTRO = "debian" ]]; then
    case "$_SVER" in
        11) install_prereqs "debian" "$_SVER" "openjdk-17-jdk" ;;
        10) install_prereqs "debian" "$_SVER" "openjdk-11-jdk" ;;
        *)  unsupported ;;
    esac
elif [[ $_DISTRO = "linuxmint" ]]; then
    case "$_SVER" in
        21) install_prereqs "ubuntu" "22.04" "openjdk-17-jdk" "true" ;;
        20) install_prereqs "ubuntu" "20.04" "openjdk-17-jdk" ;;
        *)     unsupported ;;
    esac
fi

echo -e "\n${_GREEN}Finished installing prerequisites${_NC}"
read -rp "Press [Enter] to return to the installer menu"


#### End of [ Main ]
########################################################################################
